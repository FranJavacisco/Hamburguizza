{"version":3,"sources":["productos.js"],"names":["ProductLoader","_classCallCheck","this","products","pizzas","id","name","description","price","image","category","tags","rating","reviews","badges","isSpicy","isVegetarian","burgers","loadProducts","gridId","_this","getElementById","grid","innerHTML","map","product","createProductCard","join","initializeProductEvents","concat","createTags","createRating","toFixed","length","badge","toLowerCase","tag","stars","repeat","_this2","document","querySelectorAll","forEach","button","addEventListener","e","productId","dataset","handleAddToCart","closest","showProductDetail","findProduct","cart","addItem","showNotification","find","p","modal","createElement","className","body","appendChild","querySelector","classList","add","remove","setTimeout","_this3","notification","productLoader"],"mappings":"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","file":"productos.min.js","sourcesContent":["/**\r\n * Clase para manejar la carga dinámica de productos\r\n */\r\nclass ProductLoader {\r\n    constructor() {\r\n        // Base de datos de productos\r\n        this.products = {\r\n            pizzas: [\r\n                {\r\n                    id: 'p1',\r\n                    name: 'Pizza Margherita',\r\n                    description: 'Salsa de tomate, mozzarella fresca, albahaca y aceite de oliva extra virgen',\r\n                    price: 12.99,\r\n                    image: '/api/placeholder/250/200',\r\n                    category: 'pizzas',\r\n                    tags: ['vegetariana', 'clásica'],\r\n                    rating: 4.8,\r\n                    reviews: 128,\r\n                    badges: ['Popular'],\r\n                    isSpicy: false,\r\n                    isVegetarian: true\r\n                },\r\n                {\r\n                    id: 'p2',\r\n                    name: 'Pizza Pepperoni',\r\n                    description: 'Salsa de tomate, mozzarella, pepperoni premium y orégano',\r\n                    price: 14.99,\r\n                    image: '/api/placeholder/250/200',\r\n                    category: 'pizzas',\r\n                    tags: ['clásica', 'picante'],\r\n                    rating: 4.6,\r\n                    reviews: 96,\r\n                    badges: ['Bestseller'],\r\n                    isSpicy: true,\r\n                    isVegetarian: false\r\n                },\r\n                {\r\n                    id: 'p3',\r\n                    name: 'Pizza 4 Quesos',\r\n                    description: 'Mozzarella, gorgonzola, parmesano y queso de cabra',\r\n                    price: 15.99,\r\n                    image: '/api/placeholder/250/200',\r\n                    category: 'pizzas',\r\n                    tags: ['premium', 'vegetariana'],\r\n                    rating: 4.7,\r\n                    reviews: 156,\r\n                    badges: ['Premium'],\r\n                    isSpicy: false,\r\n                    isVegetarian: true\r\n                },\r\n                {\r\n                    id: 'p4',\r\n                    name: 'Pizza Vegetariana',\r\n                    description: 'Pimientos, champiñones, aceitunas, cebolla y tomate',\r\n                    price: 13.99,\r\n                    image: '/api/placeholder/250/200',\r\n                    category: 'pizzas',\r\n                    tags: ['vegetariana', 'saludable'],\r\n                    rating: 4.5,\r\n                    reviews: 92,\r\n                    badges: ['Veggie'],\r\n                    isSpicy: false,\r\n                    isVegetarian: true\r\n                }\r\n            ],\r\n            burgers: [\r\n                // Aquí irían las hamburguesas con la misma estructura\r\n            ]\r\n        };\r\n\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * Inicializa la carga de productos\r\n     */\r\n    init() {\r\n        this.loadProducts('pizzas', 'pizzasGrid');\r\n        this.loadProducts('burgers', 'burgersGrid');\r\n    }\r\n\r\n    /**\r\n     * Carga los productos en el grid especificado\r\n     */\r\n    loadProducts(category, gridId) {\r\n        const grid = document.getElementById(gridId);\r\n        if (!grid) return;\r\n\r\n        const products = this.products[category];\r\n        grid.innerHTML = products.map(product => this.createProductCard(product)).join('');\r\n\r\n        // Inicializar eventos después de cargar los productos\r\n        this.initializeProductEvents();\r\n    }\r\n\r\n    /**\r\n     * Crea el HTML para una tarjeta de producto\r\n     */\r\n    createProductCard(product) {\r\n        return `\r\n            <div class=\"product-card\" data-id=\"${product.id}\" data-category=\"${product.category}\">\r\n                ${this.createBadges(product.badges)}\r\n                <img src=\"${product.image}\" alt=\"${product.name}\" class=\"product-image\">\r\n                <div class=\"product-info\">\r\n                    <h3>${product.name}</h3>\r\n                    <div class=\"product-tags\">\r\n                        ${this.createTags(product.tags)}\r\n                    </div>\r\n                    <p>${product.description}</p>\r\n                    <div class=\"product-meta\">\r\n                        ${this.createRating(product.rating, product.reviews)}\r\n                        <div class=\"price\">$${product.price.toFixed(2)}</div>\r\n                    </div>\r\n                    <button class=\"add-to-cart\" data-product-id=\"${product.id}\">\r\n                        Agregar al Carrito\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Crea los badges del producto\r\n     */\r\n    createBadges(badges) {\r\n        if (!badges || !badges.length) return '';\r\n        return badges.map(badge => `\r\n            <div class=\"badge ${badge.toLowerCase()}\">${badge}</div>\r\n        `).join('');\r\n    }\r\n\r\n    /**\r\n     * Crea las etiquetas del producto\r\n     */\r\n    createTags(tags) {\r\n        if (!tags || !tags.length) return '';\r\n        return tags.map(tag => `\r\n            <span class=\"tag ${tag.toLowerCase()}\">${tag}</span>\r\n        `).join('');\r\n    }\r\n\r\n    /**\r\n     * Crea el sistema de calificación\r\n     */\r\n    createRating(rating, reviews) {\r\n        const stars = '⭐'.repeat(Math.floor(rating));\r\n        return `\r\n            <div class=\"rating\" data-rating=\"${rating}\">\r\n                <div class=\"stars\">${stars}</div>\r\n                <span class=\"rating-count\">(${reviews})</span>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Inicializa los eventos de los productos\r\n     */\r\n    initializeProductEvents() {\r\n        // Eventos para agregar al carrito\r\n        document.querySelectorAll('.add-to-cart').forEach(button => {\r\n            button.addEventListener('click', (e) => {\r\n                const productId = e.target.dataset.productId;\r\n                this.handleAddToCart(productId);\r\n            });\r\n        });\r\n\r\n        // Eventos para las imágenes\r\n        document.querySelectorAll('.product-image').forEach(image => {\r\n            image.addEventListener('click', (e) => {\r\n                const productId = e.target.closest('.product-card').dataset.id;\r\n                this.showProductDetail(productId);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Maneja la adición de productos al carrito\r\n     */\r\n    handleAddToCart(productId) {\r\n        const product = this.findProduct(productId);\r\n        if (product && typeof cart !== 'undefined') {\r\n            cart.addItem(product);\r\n            this.showNotification(`${product.name} agregado al carrito`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Encuentra un producto por su ID\r\n     */\r\n    findProduct(productId) {\r\n        for (const category in this.products) {\r\n            const product = this.products[category].find(p => p.id === productId);\r\n            if (product) return product;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Muestra el detalle de un producto\r\n     */\r\n    showProductDetail(productId) {\r\n        const product = this.findProduct(productId);\r\n        if (!product) return;\r\n\r\n        // Crear y mostrar modal con detalles del producto\r\n        const modal = document.createElement('div');\r\n        modal.className = 'product-modal';\r\n        modal.innerHTML = `\r\n            <div class=\"product-modal-content\">\r\n                <button class=\"close-modal\">✕</button>\r\n                <div class=\"product-detail\">\r\n                    <img src=\"${product.image}\" alt=\"${product.name}\">\r\n                    <div class=\"product-info\">\r\n                        <h2>${product.name}</h2>\r\n                        <p>${product.description}</p>\r\n                        <div class=\"product-tags\">\r\n                            ${this.createTags(product.tags)}\r\n                        </div>\r\n                        <div class=\"product-meta\">\r\n                            ${this.createRating(product.rating, product.reviews)}\r\n                            <div class=\"price\">$${product.price.toFixed(2)}</div>\r\n                        </div>\r\n                        <button class=\"add-to-cart\" data-product-id=\"${product.id}\">\r\n                            Agregar al Carrito\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        document.body.appendChild(modal);\r\n        setTimeout(() => modal.classList.add('active'), 100);\r\n\r\n        // Event listeners del modal\r\n        modal.querySelector('.close-modal').addEventListener('click', () => {\r\n            modal.classList.remove('active');\r\n            setTimeout(() => modal.remove(), 300);\r\n        });\r\n\r\n        modal.querySelector('.add-to-cart').addEventListener('click', () => {\r\n            this.handleAddToCart(product.id);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Muestra una notificación\r\n     */\r\n    showNotification(message) {\r\n        const notification = document.createElement('div');\r\n        notification.className = 'product-notification';\r\n        notification.textContent = message;\r\n        \r\n        document.body.appendChild(notification);\r\n        \r\n        setTimeout(() => notification.classList.add('show'), 100);\r\n        setTimeout(() => {\r\n            notification.classList.remove('show');\r\n            setTimeout(() => notification.remove(), 300);\r\n        }, 3000);\r\n    }\r\n}\r\n\r\n// Inicializar el cargador de productos\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const productLoader = new ProductLoader();\r\n});"]}